{"version":3,"sources":["../../src/timeline/timeline-entry-header/timeline-entry-header.component.ts","../../src/timeline/timeline-entry-dot/timeline-entry-dot.component.ts","../../src/timeline/timeline-entry-content/timeline-entry-content.component.ts","../../src/timeline/timeline-entry-side/timeline-entry-side.component.ts","../../src/timeline/timeline-entry/timeline-entry.component.ts","../../src/timeline/timeline/timeline.component.ts","../../src/timeline/timeline.module.ts"],"names":["Component","args","selector","template","encapsulation","ViewEncapsulation","None","MglTimelineEntryDotComponent","animationBuilder","elementRef","renderer","changeDetectorRef","document","this","_expanded","_alternate","_mobile","_size","animationDone","EventEmitter","expandAnimationTiming","collapseAnimationTiming","clazz","Object","defineProperty","prototype","size","setStyle","alternate","mobile","expanded","animate","ngAfterViewInit","initialStyle","defaultView","getComputedStyle","nativeElement","detectChanges","getCollapsedStyle","top","left","width","height","opacity","transform","boxShadow","borderRadius","getTransitionStyle","assign","getExpandedStyle","_this","destroyAnimation","animation","build","style","create","onDone","emit","toState","play","baseStyle","keys","forEach","property","destroy","AnimationBuilder","ElementRef","Renderer2","ChangeDetectorRef","Inject","DOCUMENT","Input","type","HostBinding","MglTimelineEntryContentComponent","contentHeight","scrollHeight","MglTimelineEntrySideComponent","value","classList","toggle","MglTimelineEntryComponent","subscriptions","focusOnOpen","changed","dot","content","side","push","subscribe","event","scrollIntoView","behavior","ngOnDestroy","subscription","unsubscribe","collapse","expand","headerFound","containsInPath","dotFound","mouseEvent","name","currentElem","target","localName","parentElement","Output","ContentChild","MglTimelineEntryHeaderComponent","MglTimelineComponent","mobileWidthThreshold","_focusOnOpen","contains","entry","ngOnChanges","simpleChanges","updateContent","clientWidth","setTimeout","changes","index","state","filter","e","onResize","ev","ContentChildren","HostListener","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'mgl-timeline-entry-header',\n  templateUrl: './timeline-entry-header.component.html',\n  styleUrls: ['./timeline-entry-header.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MglTimelineEntryHeaderComponent {\n  \n}\n","import {\n  Component, Input, HostBinding, ElementRef, EventEmitter, Output,\n  AfterViewInit, Renderer2, ChangeDetectorRef, Inject, ViewEncapsulation\n} from '@angular/core';\nimport { AnimationBuilder, style, animate } from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'mgl-timeline-entry-dot',\n  templateUrl: './timeline-entry-dot.component.html',\n  styleUrls: ['./timeline-entry-dot.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MglTimelineEntryDotComponent implements AfterViewInit {\n\n  private _expanded: boolean = false;\n  private _alternate: boolean = false;\n  private _mobile: boolean = false;\n  private initialStyle;\n  private _size: number = 50;\n  private animation;\n\n  animationDone = new EventEmitter<any>();\n\n  @Input()\n  expandAnimationTiming = '200ms ease';\n\n  @Input()\n  collapseAnimationTiming = '100ms ease';\n\n\n  @Input('class')\n  @HostBinding('class')\n  clazz = 'primary';\n\n  @Input()\n  set size(size: number) {\n    this._size = size;\n    this.setStyle();\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  set alternate(alternate: boolean) {\n    this._alternate = alternate;\n    this.setStyle();\n  }\n\n  get alternate() {\n    return this._alternate;\n  }\n\n  set mobile(mobile: boolean) {\n    this._mobile = mobile;\n    this.setStyle();\n  }\n\n  get mobile() {\n    return this._mobile;\n  }\n\n  set expanded(expanded: boolean) {\n    const animate = this._expanded !== expanded;\n    this._expanded = expanded;\n    animate ? this.animate() : this.setStyle()\n  }\n\n  get expanded() {\n    return this._expanded;\n  }\n\n  constructor(private animationBuilder: AnimationBuilder, private elementRef: ElementRef,\n  private renderer: Renderer2, private changeDetectorRef: ChangeDetectorRef,\n  @Inject(DOCUMENT) private document) { }\n\n  ngAfterViewInit() {\n    this.initialStyle = this.document.defaultView.getComputedStyle(this.elementRef.nativeElement);\n    this.setStyle();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  private getCollapsedStyle() {\n    return {\n      top: '50%',\n      left: (this.alternate || this.mobile) ? '-5px' : 'calc(100% + 5px)',\n      width: this.size + 'px',\n      height: this.size + 'px',\n      opacity: 1,\n      transform: 'translateY(-50%) translateX(-50%)',\n      boxShadow: this.initialStyle && this.initialStyle.boxShadow,\n      borderRadius: '100px'\n    }\n  }\n\n  private getTransitionStyle() {\n    return {\n      ...this.getCollapsedStyle(),\n      left: '50%',\n      opacity: 0.5,\n      boxShadow: 'none'\n    }\n  }\n\n  private getExpandedStyle() {\n    return {\n      ...this.getTransitionStyle(),\n      left: '0',\n      transform: 'translateX(0) translateY(-50%)',\n      width: '100%',\n      height: '100%',\n      opacity: 1,\n      borderRadius: 0\n    }\n  }\n\n  private animate() {\n    this.destroyAnimation();\n    if (this.expanded) {\n      this.animation = this.animationBuilder\n        .build([\n          style(this.getCollapsedStyle()),\n          animate(this.expandAnimationTiming, style(this.getTransitionStyle())),\n          animate(this.expandAnimationTiming, style(this.getExpandedStyle())),\n        ])\n        .create(this.elementRef.nativeElement)\n      this.animation.onDone(() => this.animationDone.emit({ toState: 'expanded' }));\n      this.animation.play();\n\n    } else {\n      this.animationBuilder\n      this.animation = this.animationBuilder\n        .build([\n          style(this.getExpandedStyle()),\n          animate(this.collapseAnimationTiming, style(this.getTransitionStyle())),\n          animate(this.collapseAnimationTiming, style(this.getCollapsedStyle())),\n        ])\n        .create(this.elementRef.nativeElement)\n      this.animation.onDone(() => this.animationDone.emit({ toState: 'collapsed' }));\n      this.animation.play();\n    }\n  }\n\n  private setStyle() {\n    this.destroyAnimation();\n    const baseStyle = this.expanded ? this.getExpandedStyle() : this.getCollapsedStyle();\n    Object.keys(baseStyle).forEach(property => {\n      this.renderer.setStyle(this.elementRef.nativeElement, property, baseStyle[property])\n    })\n  }\n\n  private destroyAnimation() {\n    if (this.animation) {\n      this.animation.destroy();\n      delete this.animation;\n    }\n  }\n\n}\n","import { AnimationBuilder, style, animate } from '@angular/animations';\nimport { Component, EventEmitter, ElementRef, AfterViewInit, Renderer2, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n  selector: 'mgl-timeline-entry-content',\n  templateUrl: './timeline-entry-content.component.html',\n  styleUrls: ['./timeline-entry-content.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MglTimelineEntryContentComponent implements AfterViewInit {\n\n  @Input()\n  expandAnimationTiming = '200ms ease';\n\n  @Input()\n  collapseAnimationTiming = '100ms ease';\n\n  private contentHeight;\n  animationDone = new EventEmitter<any>();\n\n  private _expanded: boolean = false;\n\n  set expanded(expanded: boolean) {\n    this.contentHeight = this.elementRef.nativeElement.scrollHeight;\n    const animate = this._expanded !== expanded;\n    this._expanded = expanded;\n    animate ? this.animate() : this.setStyle\n  }\n\n  get expanded() {\n    return this._expanded;\n  }\n\n  constructor(private elementRef: ElementRef, private animationBuilder: AnimationBuilder, private renderer: Renderer2) { }\n\n  ngAfterViewInit(): void {\n    this.contentHeight = this.elementRef.nativeElement.scrollHeight;\n    this.setStyle();\n  }\n\n  private getCollapsedStyle() {\n    return {\n      height: '0px'\n    }\n  }\n\n  private getExpandedStyle() {\n    return {\n      height: this.contentHeight + 'px'\n    }\n  }\n\n  animate() {\n    if (this.expanded) {\n      const animation = this.animationBuilder\n        .build([\n          style(this.getCollapsedStyle()),\n          animate(this.expandAnimationTiming, style(this.getExpandedStyle())),\n        ])\n        .create(this.elementRef.nativeElement)\n      animation.onDone(() => this.animationDone.emit({ toState: 'expanded' }));\n      animation.play();\n\n    } else {\n      this.animationBuilder\n      const animation = this.animationBuilder\n        .build([\n          style(this.getExpandedStyle()),\n          animate(this.collapseAnimationTiming, style(this.getCollapsedStyle())),\n        ])\n        .create(this.elementRef.nativeElement)\n      animation.onDone(() => this.animationDone.emit({ toState: 'collapsed' }));\n      animation.play();\n    }\n  }\n\n  setStyle() {\n    const baseStyle = this.expanded ? this.getExpandedStyle() : this.getCollapsedStyle();\n    Object.keys(baseStyle).forEach(property => {\n      this.renderer.setStyle(this.elementRef.nativeElement, property, baseStyle[property])\n    })\n  }\n\n}\n","import { Component, Input, ElementRef, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'mgl-timeline-entry-side',\n  templateUrl: './timeline-entry-side.component.html',\n  styleUrls: ['./timeline-entry-side.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MglTimelineEntrySideComponent {\n\n  set alternate(value) {\n    this.elementRef.nativeElement.classList.toggle('alternate', value);\n  }\n\n  set mobile(value) {\n    this.elementRef.nativeElement.classList.toggle('mobile', value);\n  }\n  \n  constructor(private elementRef: ElementRef) { }\n\n}\n","import {HostBinding, ViewEncapsulation} from '@angular/core';\nimport { MglTimelineEntrySideComponent } from './../timeline-entry-side/timeline-entry-side.component';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MglTimelineEntryDotComponent } from './../timeline-entry-dot/timeline-entry-dot.component';\nimport {\n  Component, AfterViewInit, Output, EventEmitter, ContentChild, OnDestroy, ElementRef\n} from '@angular/core';\nimport { MglTimelineEntryContentComponent } from '../timeline-entry-content/timeline-entry-content.component';\nimport { MglTimelineEntryHeaderComponent } from '../timeline-entry-header/timeline-entry-header.component';\n\n@Component({\n  selector: 'mgl-timeline-entry',\n  templateUrl: './timeline-entry.component.html',\n  styleUrls: ['./timeline-entry.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MglTimelineEntryComponent implements AfterViewInit, OnDestroy {\n\n  private subscriptions: Subscription[] = [];\n\n  focusOnOpen: boolean = false;\n\n  set expanded(expanded) {\n    if (this.dot && expanded) {\n      this.dot.expanded = expanded;\n    } else {\n      this.content.expanded = expanded\n    }\n    this.changed.emit(expanded);\n  }\n\n  @HostBinding('class.expanded')\n  get expanded() {\n    return this.dot ? (this.dot.expanded && this.content.expanded) : this.content.expanded;\n  }\n\n  private _mobile: boolean = false;\n\n  set mobile(value) {\n    this.elementRef.nativeElement.classList.toggle('mobile', value);\n    if (this.dot) {\n      this.dot.mobile = value;\n    }\n    if (this.side) {\n      this.side.mobile = value;\n    }\n  }\n\n  @Output('expand')\n  changed = new EventEmitter<boolean>();\n\n  @Output()\n  animationDone = new EventEmitter<string>();\n\n  @ContentChild(MglTimelineEntryContentComponent) content: MglTimelineEntryContentComponent;\n  @ContentChild(MglTimelineEntryHeaderComponent) header: MglTimelineEntryHeaderComponent;\n  @ContentChild(MglTimelineEntryDotComponent) dot: MglTimelineEntryDotComponent;\n  @ContentChild(MglTimelineEntrySideComponent) side: MglTimelineEntrySideComponent;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterViewInit() {\n    if (this.dot) {\n      this.subscriptions.push(this.dot.animationDone.subscribe(event => {\n        if (event.toState === 'expanded') {\n          this.content.expanded = true;\n        } else {\n          this.animationDone.emit(event);\n        }\n      }));\n    }\n    if (this.content) {\n      this.subscriptions.push(this.content.animationDone.subscribe(event => {\n        if (this.dot && event.toState === 'collapsed') {\n          this.dot.expanded = false;\n        } else {\n          if (this.focusOnOpen) {\n            this.elementRef.nativeElement.scrollIntoView({ behavior: 'smooth' });\n          }\n          this.animationDone.emit(event);\n        }\n      }));\n    }\n  }\n\n  set alternate(value: boolean) {\n    this.elementRef.nativeElement.classList.toggle('alternate', value);\n    if (this.dot) {\n      this.dot.alternate = value;\n    }\n    if (this.side) {\n      this.side.alternate = value;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  collapse() {\n    this.expanded = false;\n  }\n\n  expand() {\n    this.expanded = true;\n  }\n\n\n  toggle(event: MouseEvent) {\n    const headerFound = this.containsInPath(event, 'mgl-timeline-entry-header');\n    const dotFound = this.containsInPath(event, 'mgl-timeline-entry-dot');\n    if (headerFound || dotFound) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  private containsInPath(mouseEvent: MouseEvent, name: string): boolean {\n    let currentElem: Element = mouseEvent.target as Element;\n    while (currentElem) {\n      if (currentElem.localName === name) {\n        return true;\n      }\n      currentElem = currentElem.parentElement;\n    }\n    return false;\n  }\n}\n","import { QueryList, ElementRef, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\nimport { MglTimelineEntryComponent } from './../timeline-entry/timeline-entry.component';\nimport { Component, Input, ContentChildren, AfterViewInit, EventEmitter, Output, HostListener, OnChanges, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n@Component({\n  selector: 'mgl-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MglTimelineComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  toggle: boolean = true;\n\n  @Input()\n  mobileWidthThreshold: number = 640;\n\n  @Input()\n  alternate: boolean = true;\n\n  @Input()\n  side: string = 'left';\n\n  set mobile(value: boolean) {\n    this.content && this.content.forEach(entry => entry.mobile = value);\n    this.elementRef.nativeElement.classList.toggle('mobile', value)\n  }\n\n  get mobile() {\n    return this.elementRef.nativeElement.classList.contains('mobile');\n  }\n\n  private _focusOnOpen = false;\n\n  @Input()\n  set focusOnOpen(focusOnOpen) {\n    this.content && this.content.forEach(entry => entry.focusOnOpen = focusOnOpen);\n    this._focusOnOpen = focusOnOpen;\n  }\n\n  get focusOnOpen() {\n    return this._focusOnOpen;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(MglTimelineEntryComponent)\n  private content: QueryList<MglTimelineEntryComponent>;\n\n  constructor(private elementRef: ElementRef, private changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnChanges(simpleChanges) {\n    this.updateContent();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    this.mobile = this.elementRef.nativeElement.clientWidth < this.mobileWidthThreshold;\n    setTimeout(() => this.updateContent());\n    this.content.changes.subscribe(changes => {\n      this.updateContent();\n    });\n  }\n\n  private updateContent() {\n    this.ngOnDestroy();\n    if (this.content) {\n      this.content.forEach((entry, index) => {\n        if (this.toggle) {\n          this.subscriptions.push(\n            entry.changed.subscribe(state => {\n              if (state === true) {\n                this.content.filter(e => e !== entry).forEach(e => e.collapse());\n              }\n            }));\n        }\n        entry.alternate = this.alternate ? (index % 2 !== 0) : (this.side === 'right');\n        entry.mobile = this.mobile;\n        entry.focusOnOpen = this.focusOnOpen;\n      });\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(ev: KeyboardEvent) {\n    this.mobile = this.elementRef.nativeElement.clientWidth < this.mobileWidthThreshold;\n  }\n}\n","import { MglTimelineEntryHeaderComponent } from './timeline-entry-header/timeline-entry-header.component';\nimport { MglTimelineEntryDotComponent } from './timeline-entry-dot/timeline-entry-dot.component';\nimport { MglTimelineEntryContentComponent } from './timeline-entry-content/timeline-entry-content.component';\nimport { MglTimelineEntrySideComponent } from './timeline-entry-side/timeline-entry-side.component';\nimport { MglTimelineEntryComponent } from './timeline-entry/timeline-entry.component';\nimport { MglTimelineComponent } from './timeline/timeline.component';\nimport { NgModule } from '@angular/core';\n@NgModule({\n  declarations: [\n    MglTimelineComponent,\n    MglTimelineEntryComponent,\n    MglTimelineEntryHeaderComponent,\n    MglTimelineEntrySideComponent,\n    MglTimelineEntryContentComponent,\n    MglTimelineEntryDotComponent\n  ],\n  exports: [\n    MglTimelineComponent,\n    MglTimelineEntryComponent,\n    MglTimelineEntryHeaderComponent,\n    MglTimelineEntrySideComponent,\n    MglTimelineEntryContentComponent,\n    MglTimelineEntryDotComponent\n  ]\n})\nexport class MglTimelineModule { }\n"]}